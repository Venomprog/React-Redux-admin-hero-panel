{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesFetched","heroes","type","payload","HeroesListItem","elementClassName","name","description","element","onDeleteHero","className","src","alt","style","onClick","aria-label","Spinner","role","HeroesList","useSelector","state","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","catch","arr","elements","length","map","id","props","newArr","filter","item","console","log","HeroesAddForm","useState","setName","setDescription","setElement","onSubmit","e","preventDefault","newHero","uuidv4","htmlFor","required","placeholder","value","onChange","target","HeroesFilters","filters","filtersFetched","i","classes","onFilter","renderFiltersList","App","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06539307.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","export const heroesFetching = () => {\n    return {\n        type: 'HEROES_FETCHING'\n    }\n}\n\nexport const heroesFetched = (heroes) => {\n    return {\n        type: 'HEROES_FETCHED',\n        payload: heroes\n    }\n}\n\nexport const heroesFetchingError = () => {\n    return {\n        type: 'HEROES_FETCHING_ERROR'\n    }\n}\n\nexport const filtersFetched = (filters) => {\n    return {\n        type: 'FILTERS_FETCHED',\n        payload: filters\n    }\n}\n\nexport const filtersFetchingError = () => {\n    return {\n        type: 'FILTERS_FETCHING_ERROR'\n    }\n}","\nconst HeroesListItem = ({name, description, element, onDeleteHero}) => {\n\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"https://www.meme-arsenal.com/memes/91fbc6284b6fa84b74d95f54414665b2.jpg\" \n                className=\"img-fluid w-25 d-inline\" \n                alt=\"unknown hero\" \n                style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\"\n                onClick={onDeleteHero}\n            >\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { heroesFetching, heroesFetched, heroesFetchingError } from '../../actions';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния  готово\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n    const {heroes, heroesLoadingStatus} = useSelector(state => state);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(heroesFetching());\n        request(\"http://localhost:3001/heroes\")\n            .then(data => dispatch(heroesFetched(data)))\n            .catch(() => dispatch(heroesFetchingError()))\n\n        // eslint-disable-next-line\n    }, []);\n\n    const onDeleteHero = (id) => {\n        const newArr = heroes.filter(item => item.id !== id);\n        console.log(newArr);\n        dispatch(heroesFetched(newArr))\n    }\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n\n        return arr.map(({id, ...props}) => {\n            return <HeroesListItem onDeleteHero={() => onDeleteHero(id)} key={id} {...props}/>\n        })\n    }\n\n    const elements = renderHeroesList(heroes);\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;","import { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFetched } from \"../../actions\";\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать (ГОТОВО)\n// в общее состояние и отображаться в списке + фильтроваться (ГОТОВО)\n// Уникальный идентификатор персонажа можно сгенерировать через uiid  (ГОТОВО)\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [element, setElement] = useState('');\n\n    const {heroes} = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const changeName = (e) => {\n        const value = e.target.value;\n        setName(value);\n    }\n\n    const changeDescription = (e) => {\n        const value = e.target.value;\n        setDescription(value)\n    }\n\n    const changeElement = (e) => {\n        const value = e.target.value;\n        setElement(value)\n    }\n\n\n    const onSentForm = (e) => {\n        e.preventDefault();\n        const newId = uuidv4();\n        const newHero = {\n            id: newId,\n            name: name,\n            description: description,\n            element: element\n        }\n\n        dispatch(heroesFetched([...heroes, newHero]))\n    }\n\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSentForm}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={name}\n                    onChange={changeName}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={description}\n                    onChange={changeDescription}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={element}\n                    onChange={changeElement}>\n                    <option >Я владею элементом...</option>\n                    <option value=\"fire\">Огонь</option>\n                    <option value=\"water\">Вода</option>\n                    <option value=\"wind\">Ветер</option>\n                    <option value=\"earth\">Земля</option>\n                </select>\n            </div>\n\n            <button type=\"submit\"  className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useDispatch } from \"react-redux\";\nimport { filtersFetched, filtersFetchingError, heroesFetched } from \"../../actions\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n    const {filters, heroes} = useSelector(state => state);\n\n    const {request} = useHttp();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        request(\"http://localhost:3001/filters\")\n            .then(data => dispatch(filtersFetched(data)))\n            .catch(() => dispatch(filtersFetchingError()))\n    }, []);\n\n    const onFilter = (element) => {\n        if (element !== 'all') {\n            const newArr = heroes.filter(item => item.element === element)\n            dispatch(heroesFetched(newArr))\n        } else {\n            request(\"http://localhost:3001/heroes\")\n                .then(data => dispatch(heroesFetched(data)))\n            \n        }\n    }\n\n    const renderFiltersList = (arr) => {\n        if (arr.length === 0){\n            return\n        }\n        \n        return arr.map((item, i) => {\n            return <button key={i} className={item.classes} onClick={() => onFilter(item.element)} >{item.name}</button>\n        })\n    }\n\n    const elements = renderFiltersList(filters);\n\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n    filters: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'HEROES_FETCHING':\n            return {\n                ...state,\n                heroesLoadingStatus: 'loading'\n            }\n        case 'HEROES_FETCHED':\n            return {\n                ...state,\n                heroes: action.payload,\n                heroesLoadingStatus: 'idle'\n            }\n        case 'HEROES_FETCHING_ERROR':\n            return {\n                ...state,\n                heroesLoadingStatus: 'error'\n            }\n        case 'FILTERS_FETCHED':\n            return {\n                ...state,\n                filters: action.payload,\n            }\n        case 'FILTERS_FETCHING_ERROR':\n            return {\n                ...state,\n            }\n        default: return state\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}